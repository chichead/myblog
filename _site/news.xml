<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>🍊오렌지맨숀</title>
<link>https://orange-mansion.com/news.html</link>
<atom:link href="https://orange-mansion.com/news.xml" rel="self" type="application/rss+xml"/>
<description>귤 향 가득한, 오렌지 맨숀입니다.</description>
<generator>quarto-1.4.550</generator>
<lastBuildDate>Wed, 17 Apr 2024 15:00:00 GMT</lastBuildDate>
<item>
  <title>“한국이 개발한 파운데이션 모델은 없다”</title>
  <dc:creator>chichead </dc:creator>
  <link>https://orange-mansion.com/news/240418_fm/</link>
  <description><![CDATA[ 





<section id="the-ai-index-report-2024" class="level2">
<h2 class="anchored" data-anchor-id="the-ai-index-report-2024">The AI index report 2024</h2>
<p><img src="https://orange-mansion.com/image/AIIndex_2024.jpeg" class="img-fluid"></p>
<p>미국의 스탠퍼드 대학교에 HAI라는 곳이 있습니다. 이름을 풀어보면 Human-Centered Artificial Intelligence, 즉 인간중심 인공지능을 연구하는 연구시설입니다. 이곳에서는 연례적으로 AI 보고서를 공개하고 있습니다. 이름하여 <the ai="" index="" report="">죠. 2024년 버전의 보고서가 지난 4월 15일 공개됐습니다.</the></p>
<p>올해로 벌써 7년째 이어지고 있는 이 보고서에는 AI 기술의 최신 동향과, 앞으로의 전망에 대한 내용이 총망라되어 있습니다. 현재 AI 기술 개발 상황은 어떠한지, 또 기술이 적용되고 있는 다양한 분야에서의 경제적 효과는 어떠한지 살펴볼 수 있습니다. 단순히 시장 전망만 다루는 게 아니라 사람들이 AI에 대해서 어떻게 생각하고 있는지 등 다양한 차원에서 AI의 현주소를 평가하고 있습니다.</p>
<p><a href="https://aiindex.stanford.edu/report/">HAI 홈페이지</a>에 들어가면 인터랙티브 그래프와 함께 보고서를 읽을 수 있습니다.</p>
<p><br></p>
</section>
<section id="top-10-takeaways" class="level2">
<h2 class="anchored" data-anchor-id="top-10-takeaways">Top 10 Takeaways</h2>
<p>연구진들이 열과 성을 다해 만든 보고서를 찬찬히 읽어보는 것이 가장 좋겠지만 분량이 상당합니다. 무려 502페이지나 되거든요. 500 페이지가 넘는 보고서가 부담이 되는 분들이라면, HAI가 정리해 놓은 10가지 핵심 내용만 살펴보세요. 2024년 현재 AI 모델의 성능이 어디까지 왔는지, 또 이런 모델을 개발하는 데 각 국가의 상황은 어떤지 알 수 있습니다.</p>
<table class="table">
<colgroup>
<col style="width: 3%">
<col style="width: 96%">
</colgroup>
<thead>
<tr class="header">
<th>No</th>
<th>Takeaways</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td><dl>
<dt>AI beats humans on some tasks, but not on all.</dt>
<dd>
<p>AI는 이미지 분류, 시각적 추론 같은 일부 영역에선 인간보다 뛰어난 성능을 보인다. 하지만 모든 작업에서 그런 것은 아니다. 복잡한 수학 문제, 시각적 상식 추론 같은 복잡한 작업에서는 여전히 인간보다 뒤처진다.</p>
</dd>
</dl></td>
</tr>
<tr class="even">
<td>2</td>
<td><dl>
<dt>Industry continues to dominate frontier AI research.</dt>
<dd>
<p>AI 연구는 여전히 산업계가 주도하고 있다. 2023년 산업계에선 기존 모델을 능가하는 이른바 ’프런티어 모델’을 51개나 만들어 냈지만, 학계에선 그에 못 미치는 15개만 만들었다.</p>
</dd>
</dl></td>
</tr>
<tr class="odd">
<td>3</td>
<td><dl>
<dt>Frontier models get way more expensive.</dt>
<dd>
<p>프런티어 모델의 훈련 비용은 점점 늘어나고 있다. Open AI가 GPT-4 컴퓨팅 비용에 약 7,800만 달러를 썼고, Google은 Gemini Ultra에 1억 9,100만 달러를 썼다.</p>
</dd>
</dl></td>
</tr>
<tr class="even">
<td>4</td>
<td><dl>
<dt>The United States leads China, the EU, and the U.K. as the leading source of top AI models.</dt>
<dd>
<p>미국은 EU, 중국을 크게 앞지르며 AI 모델 소스의 선두 국가로 등극해 있다. 2023년에 미국에서 출시된 주목할만한 AI 모델은 61개. EU의 21개, 중국의 15개를 크게 앞지른다.</p>
</dd>
</dl></td>
</tr>
<tr class="odd">
<td>5</td>
<td><dl>
<dt>Robust and standardized evaluations for LLM responsibility are seriously lacking.</dt>
<dd>
<p>LLM을 평가할 표준화된 벤치마크가 부족하다. OpenAI나 Google, Anthropic 같은 기업들은 자신들의 모델의 품질과 속도를 테스트하기 위해 각기 다른 벤치마크를 진행하고 있다. 모델 성과 평가를 위한 표준화된 프레임워크가 없는 탓에 체계적으로 비교하기가 어렵다.</p>
</dd>
</dl></td>
</tr>
<tr class="even">
<td>6</td>
<td><dl>
<dt>Generative AI investment skyrockets.</dt>
<dd>
<p>생성형 AI에 대한 투자가 급증하고 있다. 전체 AI 투자는 줄었지만, 생성형 AI에 대한 투자는 2022년 대비 거의 8배 증가했다.</p>
</dd>
</dl></td>
</tr>
<tr class="odd">
<td>7</td>
<td><dl>
<dt>The data is in: AI makes workers more productive and leads to higher quality work.</dt>
<dd>
<p>AI가 근로자의 생산성을 높이고, 작업의 질을 높이고 있다는 여러 연구들이 나오고 있다. AI는 저숙련 및 고숙련 근로자 간의 기술 격차를 메우는 잠재력을 보여주기도 했다. 하지만 적절한 감독 없이 AI를 사용할 경우엔 생산성이 저하될 수 있다는 경고도 있다.</p>
</dd>
</dl></td>
</tr>
<tr class="even">
<td>8</td>
<td><dl>
<dt>Scientific progress accelerates even further, thanks to AI.</dt>
<dd>
<p>AI 덕분에 과학적 진보가 가속화되고 있다. 더 효율적인 정렬 알고리즘을 만든 AlphaDev뿐 아니라, 재료 발견에 도움을 주는 GNoME까지… 다양한 과학 관련 AI 애플리케이션이 출시되었다.</p>
</dd>
</dl></td>
</tr>
<tr class="odd">
<td>9</td>
<td><dl>
<dt>The number of AI regulations in the United States sharply increases.</dt>
<dd>
<p>미국에서 AI 규제가 급증하고 있다. 2016년 1개였던 AI 관련 규제는 2023년엔 25개로 늘어났다.</p>
</dd>
</dl></td>
</tr>
<tr class="even">
<td>10</td>
<td><dl>
<dt>People across the globe are more cognizant of AI’s potential impact and more nervous.</dt>
<dd>
<p>전 세계 사람들은 AI의 잠재력을 인정하고 있다. 동시에 불안감도 느끼고 있다. 입소스의 조사에 따르면 응답자의 절반이 넘는 사람들이 AI 제품과 서비스에 대해 걱정하고 있다. 2022년 대비 13%p 늘어난 수치다.</p>
</dd>
</dl></td>
</tr>
</tbody>
</table>
<p><br></p>
</section>
<section id="국내-파운데이션-모델은-zero" class="level2">
<h2 class="anchored" data-anchor-id="국내-파운데이션-모델은-zero">국내 파운데이션 모델은 ZERO?</h2>
<p>문제가 된 것은 핵심정리 10개 중 4번째 문장인 “The United States leads China, the EU, and the U.K. as the leading source of top AI models.”입니다. 스탠퍼드 보고서에서는 전 세계 국가별로 Frontier AI 모델을 얼마나 발표했는지를 비교했는데요, 그중에서도 Frontier AI 연구를 대표할 수 있는 파운데이션 모델이 어디서 만들어졌는지를 분석했습니다. 보고서에선 미국이 109개로 가장 많다고 소개했고, 뒤이어 중국 20개, 영국 8개, UAE 4개 순이었습니다.</p>
<p><img src="https://orange-mansion.com/image/fm_chart.png" class="img-fluid"></p>
<p>여기에 우리나라가 개발한 파운데이션 모델은 ZERO였죠. 이걸 가지고 다양한 기사들이 나왔습니다. AI에 투자한 게 얼만데, 아직까지 파운데이션 모델은 한 개도 못 만들었다며 비판하는 목소리가 다수였습니다. 정말일까요? 일단, 보고서에서 이야기하는 파운데이션 모델이 무엇인지부터 살펴보겠습니다.</p>
<p><br></p>
</section>
<section id="foundation-model의-탄생" class="level2">
<h2 class="anchored" data-anchor-id="foundation-model의-탄생">Foundation model의 탄생</h2>
<p>2020년 초, 새롭게 등장하는 초거대 AI 모델을 두고 학계는 고심이 많았습니다. 당시는 대규모 데이터로 학습되어 다양한 다운스트림 작업에 적용할 수 있는 BERT, DALL-E, GPT-3라는 모델들이 속속 등장하는 시기였죠. 이런 모델들은 AI의 패러다임을 전환할 수 있는 모델로 여겨졌고, 이 전환을 설명할 수 있는 모델들의 개념, 혹은 카테고리가 필요했습니다.</p>
<p>2021년 HAI에서는 초거대AI연구센터를 설립해 컴퓨터와 AI 관련 연구진뿐 아니라 법, 철학 등 다방면의 스탠퍼드 연구진 100여 명을 모아 보고서를 만들었습니다. 보고서의 이름은 <a href="https://arxiv.org/abs/2108.07258">On the Opportunities and Risks of Foundation Models</a>이었죠. 보고서의 이름에서도 알 수 있듯 HAI가 선택한 이름은 파운데이션 모델(Foundation Models)이었습니다.</p>
<p><img src="https://orange-mansion.com/image/FM.png" class="img-fluid"></p>
<p>파운데이션 모델은 이름 그대로 모든 응용 분야의 기반이 될 수 있는 모델을 의미합니다. 논문에서는 파운데이션 모델을 엄청난 규모의 원시 데이터에서 비지도 학습을 통해 훈련된 AI 신경망을 의미하고 있습니다. 다양한 양식의 데이터에서 얻은 정보를 중앙 집중화해서, 다운스트림 작업에 적용할 수 있죠.</p>
<p>일단 파운데이션 모델을 만들어 두면, 새로운 애플리케이션을 위해 AI 모델을 처음부터 만들 필요가 없습니다. 파운데이션 모델을 기반으로 그냥 새로운 분야에 적용하면 되니까요. 더 빠르고, 비용도 줄일 수 있습니다. 이런 강점 탓에 파운데이션 모델은 현재 매우 빠르게 진화하고 있는 인기 있는 AI 모델이라고 할 수 있습니다.</p>
<p>그런데 이 모델을 우리나라가 단 하나도 못 만들었다는 보고서가 발표되니 난리가 난 거죠. 그런데 정말일까요?</p>
<p><br></p>
</section>
<section id="현실은-이렇다" class="level2">
<h2 class="anchored" data-anchor-id="현실은-이렇다">현실은 이렇다</h2>
<p>네이버 Future AI 센터의 센터장은 SNS를 통해 스탠퍼드 보고서의 오류를 지적했습니다. 이번에 발표한 보고서는 과거 직접 조사한 때와 달리 HAI 그룹에서 자체적으로 작성한 논문의 내용을 활용한 탓에 상당수의 파운데이션 모델이 빠졌다는 거였죠.</p>
<p>실제 HAI 보고서에는 이런 단서 조항을 달아 두었습니다.</p>
<blockquote class="blockquote">
<p>The Ecosystem Graphs make efforts to survey the global AI ecosystem, but it is possible that they underreport models from certain nations like South Korea and China.</p>
</blockquote>
<p>“생태계 그래프는 전 세계 AI 생태계를 조사하기 위해 노력하고 있지만, 한국이나 중국과 같은 특정 국가의 모델을 과소 보고할 수 있습니다.”라고요.</p>
<p>이례적으로 과학기술정보통신부도 ’사실은 이렇습니다’를 통해 반박 자료를 발표했습니다. 네이버의 <code>하이퍼클로바X</code>, LG AI 연구원의 <code>엑사원 2.0</code>, 삼성전자의 <code>Gauss</code>, NC소프트의 <code>VARCO</code> 등 다수의 독자 파운데이션 모델을 보유하고 있다고 말이죠.</p>


</section>

 ]]></description>
  <category>AI</category>
  <category>Foundation Model</category>
  <guid>https://orange-mansion.com/news/240418_fm/</guid>
  <pubDate>Wed, 17 Apr 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>넷플릭스가 18,214개의 콘텐츠 데이터를 공개했다</title>
  <dc:creator>chichead </dc:creator>
  <link>https://orange-mansion.com/news/231217_netflix/</link>
  <description><![CDATA[ <section id="반년마다-공개하는-데이터" class="level2"><h2 class="anchored" data-anchor-id="반년마다-공개하는-데이터">반년마다 공개하는 데이터</h2>
<p><img src="https://orange-mansion.com/image/netflix.webp" class="img-fluid" style="width:100.0%"></p>
<p>불투명성으로 오랫동안 비판을 받아온 넷플릭스가 1년에 두 번씩 종합적인 시청자 인사이트를 공개하기로 했습니다. 12월 13일에 공개된 넷플릭스의 <a href="https://about.netflix.com/en/news/what-we-watched-a-netflix-engagement-report">첫 보고서</a>에는 18,214개의 타이틀과 타이틀 별 시청 시간을 공개했습니다. 넷플릭스는 앞으로 스트리밍 환경의 투명성 부족 문제를 해결하겠다고 약속했습니다.</p>
<p>넷플릭스 CEO 테드 사란도스는 과거 넷플릭스의 투명성 부족이 할리우드에서 불신을 키웠다고 인정하고 상세한 시청자 데이터로 새로운 신뢰를 얻겠다는 목표를 세웠습니다.</p>
<p>그래서 넷플릭스는 앞으로 1년에 두 번씩 시청자 선호도에 대한 상세 보고서를 발표할 예정입니다.</p>
<p><br></p>
</section><section id="넷플릭스-시청-시간-top-10" class="level2"><h2 class="anchored" data-anchor-id="넷플릭스-시청-시간-top-10">넷플릭스 시청 시간 Top 10</h2>
<p>12월 13일에 공개된 상반기 보고서(2023년 1월~6월)에는 18,000개 이상의 타이틀과 약 1,000억 시간의 시청 데이터가 담겨있습니다. 보고서에 담긴 데이터는 상반기 기간동안 전 세계에서 50,000시간 이상 시청한 모든 타이틀(18,214개)을 대상으로 합니다. 18,214개의 타이틀의 총 시청 시간은 934억 5,520만 시간에 달합니다.</p>
<table class="table">
<thead><tr class="header">
<th>Rank</th>
<th>Title</th>
<th>Hours Viewed</th>
</tr></thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>The Night Agent: Season 1</td>
<td>812,100,000</td>
</tr>
<tr class="even">
<td>2</td>
<td>Ginny &amp; Georgia: Season 2</td>
<td>665,100,000</td>
</tr>
<tr class="odd">
<td>3</td>
<td>더 글로리</td>
<td>622,800,000</td>
</tr>
<tr class="even">
<td>4</td>
<td>Wednesday: Season 1</td>
<td>507,700,000</td>
</tr>
<tr class="odd">
<td>5</td>
<td>Queen Charlotte: A Bridgerton Story</td>
<td>503,000,000</td>
</tr>
<tr class="even">
<td>6</td>
<td>You: Season 4</td>
<td>440,600,000</td>
</tr>
<tr class="odd">
<td>7</td>
<td>La Reina del Sur: Season 3</td>
<td>429,600,000</td>
</tr>
<tr class="even">
<td>8</td>
<td>Outer Banks: Season 3</td>
<td>402,500,000</td>
</tr>
<tr class="odd">
<td>9</td>
<td>Ginny &amp; Georgia: Season 1</td>
<td>302,100,000</td>
</tr>
<tr class="even">
<td>10</td>
<td>FUBAR: Season 1</td>
<td>266,200,000</td>
</tr>
</tbody>
</table>
<p><br></p>
</section><section id="넷플릭스는-정말-롱테일-법칙을-따를까" class="level2"><h2 class="anchored" data-anchor-id="넷플릭스는-정말-롱테일-법칙을-따를까">넷플릭스는 정말 롱테일 법칙을 따를까?</h2>
<p><img src="https://orange-mansion.com/image/longtail.webp" class="img-fluid" style="width:100.0%"></p>
<p>넷플릭스는 <code>롱테일 법칙</code>의 대표 사례로 일컬어집니다. 롱테일 법칙은 잘 팔리지 않는 상품들도 충분히 수요가 있고, 이 수요로 인한 매출이 인기 있는 상품의 매출에 버금간다는 뜻이죠. 애플 아이팟의 음원 서비스, 아마존의 도서 판매에서 하위 80%의 매출액이 전체 매출의 50% 가까이 차지하는 현상이 롱테일 법칙이라고 할 수 있습니다. 기존의 파레토 법칙에서 무시되었던 긴 꼬리의 영역을 확보하자는 접근이 바로 롱테일 법칙입니다.</p>
<p>기존의 전통적인 시장을 지배했던 건 <code>파레토 법칙</code>입니다. 과거 기업이 투입할 수 있는 자원과 얻을 수 있는 정보량은 제한적이었습니다. 그들이 경영 실적을 높이기 위해선 선택과 집중이 필요했고, 그렇게 선택과 집중이 이뤄진 결과는 파레토 법칙으로 이어졌습니다. 파레토 법칙은 상위 20%가 전체 생산량의 80%를 차지한다는 법칙을 말합니다.</p>
<p>넷플릭스가 공개한 18,214개 타이틀과 타이틀 별 시청시간 데이터는 정말 롱테일 법칙을 따르고 있을까요?</p>
<p>참고로 넷플릭스가 공개한 보고서에 따르면 이번에 공개된 18,214개의 타이틀의 시청량은 넷플릭스 전체 시청량의 99%에 해당한다고 합니다. 50,000시간 이상 스트리밍된 타이틀만 포함된 수치인데, 넷플릭스 전체 타이틀 수와 크게 차이가 없는 것으로 추정되고 있습니다. 거의 모든 타이틀이 50,000시간 넘게 스트리밍 된다는 측면에서 롱테일 법칙을 따를 가능성이 높아 보이는데, 정말 그런지 확인해 봤습니다.</p>
<p><br></p>
<section id="시청시간-상위-20가-차지하는-비율" class="level4"><h4 class="anchored" data-anchor-id="시청시간-상위-20가-차지하는-비율">시청시간 상위 20%가 차지하는 비율</h4>
<p>일단, 넷플릭스에서 제공해준 데이터를 <code>watch_times</code>라는 녀석에 넣었습니다. 그 중 시청시간은 Hours.Viewed라는 칼럼에 들어있고요. 시청시간 상위 20% 타이틀을 <code>top_20_percent_index</code>에 넣어 그 녀석들의 시청시간을 다 합친뒤, 전체에서 얼마나 차지하는지 확인해봤습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://readxl.tidyverse.org">readxl</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://dplyr.tidyverse.org">dplyr</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">watch_times</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://readxl.tidyverse.org/reference/read_excel.html">read_excel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"watch_times.xlsx"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">top_20_percent_index</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Round.html">ceiling</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">watch_times</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">`Hours Viewed`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">percent</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/sum.html">sum</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">watch_times</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">`Hours Viewed`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">top_20_percent_index</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> </span>
<span>           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/sum.html">sum</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">watch_times</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">`Hours Viewed`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/cat.html">cat</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The top 20% of titles account for"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Round.html">round</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">percent</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, </span>
<span>    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% of the total watch time.\n"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The top 20% of titles account for 85.6 % of the total watch time.</code></pre>
</div>
</div>
<p>상위 20% 타이틀이 전체 시청시간에서 찾이하는 비율은 85.6%로 전체의 80%를 넘습니다. 넷플릭스 시청시간에서 우리가 익히 알고 있던 파레토 법칙이 등장합니다. 익히 들어왔던 만큼 넷플릭스는 당연히 롱테일 법칙을 따를 줄 알았는데 말이죠.</p>
<p><br></p>
</section><section id="절반을-차지하는-건-상위-몇-일까" class="level4"><h4 class="anchored" data-anchor-id="절반을-차지하는-건-상위-몇-일까">절반을 차지하는 건 상위 몇 % 일까?</h4>
<p>그렇다면 넷플릭스 시청시간은 얼마나 파레토 법칙이 강하게 작용하고 있을까요? 확인해 보기 위해 상위 그룹과 하위 그룹의 합이 같아지는 시점을 찾아보겠습니다. 특정 포인트를 찾아, 해당 포인트 윗 그룹과 아랫 그룹의 합이 threshold를 넘기지 않도록 세팅해 보겠습니다. 넷플릭스 시청시간 데이터를 고려해 threshold 값은 1,000만으로 잡아두었습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># threshold_point 찾기 함수</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">find_threshold_point</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">watch_times</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">threshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">i</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">watch_times</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">top_total</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/sum.html">sum</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">watch_times</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">i</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bottom_total</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/sum.html">sum</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">watch_times</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">i</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">watch_times</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    </span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/MathFun.html">abs</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">top_total</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bottom_total</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">threshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/function.html">return</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">i</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/function.html">return</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># threshold 세팅</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">threshold_value</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000000</span> </span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># threshold point 찾기</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">threshold_index</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find_threshold_point</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">watch_times</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">`Hours Viewed`</span>, </span>
<span>                                        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">threshold_value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/cat.html">cat</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Threshold point found at index:"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">threshold_index</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\n"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Threshold point found at index: 713 </code></pre>
</div>
</div>
<p>함수를 돌려보니 713번째 타이틀이 threshold point로 계산됩니다. 713개라면 전체 18,214개의 3.9% 수준입니다. 정리해 보자면 넷플릭스의 상위 4% 타이틀들이 넷플릭스 전체 시청시간의 절반을 차지하고 있는 겁니다.</p>
<p>그렇습니다. 넷플릭스 시청시간은 롱테일 법칙이 아닌 파레토 법칙을 따르고 있습니다. 그것도 아주 강력하게요.</p>


</section></section> ]]></description>
  <category>Netflix</category>
  <guid>https://orange-mansion.com/news/231217_netflix/</guid>
  <pubDate>Sat, 16 Dec 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>R Markdown의 차세대 포맷, Quarto</title>
  <dc:creator>chichead </dc:creator>
  <link>https://orange-mansion.com/news/220827_quarto/</link>
  <description><![CDATA[ 





<section id="quarto가-뭐지" class="level2">
<h2 class="anchored" data-anchor-id="quarto가-뭐지">Quarto가 뭐지</h2>
<p><img src="https://orange-mansion.com/image/quarto thumbnail.jpeg" class="img-fluid" style="width:100.0%"></p>
<p>RStudio는 자사의 2022년 컨퍼런스 rstudio::conf(2022)에서 발표한 여러 소식 가운데 가장 중요한 소식으로 이렇게 4가지를 꼽았습니다.</p>
<ol type="1">
<li><p>RStudio의 이름은 Posit으로 바꾼다</p></li>
<li><p>새로운 오픈소스 기반의 과학기술 출판 시스템, Quarto</p></li>
<li><p>Shiny 생태계의 새로운 발전</p></li>
<li><p>tidymodel의 업데이트</p></li>
</ol>
<p>1번은 이미 <a href="https://orange-mansion.com/posts/220821_rstudio-is-becoming-posit/">이 포스트</a>에서 다루었죠? 그 연장선이라고 볼 수 있는 Quarto가 이번 게시물의 주제입니다. Quarto는 R Markdown에 이은 RStudio의 차세대 R 출판 플랫폼입니다. 기존의 R Markdown을 이용하면 R code sript를 Word, HTML, PDF, PPT 등 다양한 문서 형식으로 만들 수 있었습니다. 웹을 통한 출판(Bookdown)까지도 가능했죠.</p>
<p><img src="https://orange-mansion.com/image/rmarkdown_env.png" class="img-fluid" style="width:100.0%"></p>
<p>그런데 이 R Markdwon이 어느새 10년 가까이 지났습니다. 기능의 편리함은 지적할만한 게 없었지만 R Markdown 생태계가 너무 커져버렸죠. 관련 생태계가 커졌다는 건 오히려 반길 일이지만 덕지덕지 붙어버린 서드파티 패키지들이 많아진 게 문제였습니다. 더 이상 통일된 하나의 R Markdown의 제작과 작업이 되질 못했습니다. 과학, 기술 블로그를 만들 땐 distill package를 사용하고, 웹 프레젠테이션 파일을 만들 땐 xaringan(사륜안) package를 사용하고…</p>
<p>그래서 등장한 게 바로 이 Quarto입니다. R Markdown과 마찬가지로 Knitr와 Pandoc을 기반으로 하고 있고요. 궁극적으로 R Studio는 Quarto 생태계에 다른 언어를 사용하는 사람들끼리 모을 생각을 하고 있습니다. 그래서 저번 Posit 이야기의 연장선이라고 말씀을 드린 겁니다. 그 이유 때문인지 Quarto는 R의 내장 라이브러리가 아닌 독립 소프트웨어로 제작되었습니다. 새로운 시스템 Quarto 단어가 생소할 텐데, Quarto는 4절판을 의미합니다. 8페이지 분량의 텍스트를 두 번 접어서 네 장을 만드는 형식을 뜻하죠. 출판 역사에 의미가 있는 단어를 골랐다고 합니다.</p>
<p><br></p>
<section id="quarto-다운받기" class="level4">
<h4 class="anchored" data-anchor-id="quarto-다운받기">Quarto 다운받기</h4>
<p><a href="https://quarto.org/docs/get-started/" class="uri">https://quarto.org/docs/get-started/</a></p>
<p>Quarto는 위 링크에서 받을 수 있습니다. 링크를 들어가면 나오는 홈페이지에서도 확인할 수 있지만 Quarto는 R 뿐만 아니라 VS code, Jupyter에서도 활용할 수 있습니다.</p>
<p><br></p>
</section>
</section>
<section id="r-markdown과-차이점" class="level2">
<h2 class="anchored" data-anchor-id="r-markdown과-차이점">R Markdown과 차이점</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://orange-mansion.com/image/rmarkdown_sys.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Quarto의 구조를 알기 위해선 R Markdown에 대한 이해가 필요합니다. 일단 R Markdown 시스템은 위의 그림과 같습니다. Rmd(R 마크다운) 파일을 knitr package를 통해 md(마크다운) 파일로 만들고, pandoc 라이브러리를 통해 문서, PPT, 웹페이지, 책의 형태로 퍼블리싱되는 거죠. knitr은 2012년 Yihui Xie에 의해 개발된 패키지입니다. Knitr 패키지를 이용하면 동적 리포트를 생성할 수 있게 해주죠. md 파일을 다양한 형식으로 변환할 때에는 pandoc 라이브러리를 활용합니다. 정리해보면 기존 R Markdown은 Rmd 파일을 여러 가지 형태의 문서로 퍼블리싱해주는 시스템이라고 할 수 있겠네요.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://orange-mansion.com/image/quarto.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>R &amp; stats illustrations by <a href="https://github.com/allisonhorst/stats-illustrations">@allison_horst</a></figcaption>
</figure>
</div>
<p>Quarto도 비슷합니다. R Markdown과 마찬가지로 Knitr과 pandoc을 활용합니다. 달라진 건 적용 대상입니다. 기존 시스템에선 Rmd만 가능했다면 이제는 Python도 가능합니다. jupyter까지 활용하게 되면서 Python에서 qmd(Qarto markdown) 파일을 작성하면 jupyter를 통해 md 파일로 변환해 다양한 결과물을 만들어 낼 수 있게 된 거죠.</p>
<p><br></p>
<section id="quarto-vs-r-markdown" class="level4">
<h4 class="anchored" data-anchor-id="quarto-vs-r-markdown">Quarto vs R Markdown</h4>
<table class="table">
<colgroup>
<col style="width: 27%">
<col style="width: 32%">
<col style="width: 38%">
</colgroup>
<thead>
<tr class="header">
<th>구분</th>
<th>R Markdown</th>
<th>Quarto</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>기본 포맷</td>
<td>html_document<br>
pdf_document<br>
word_document</td>
<td>html<br>
pdf<br>
word</td>
</tr>
<tr class="even">
<td>비머 포맷(발표자료)</td>
<td>beamer_presentation</td>
<td>beamer</td>
</tr>
<tr class="odd">
<td>PPT</td>
<td>powerpoint_presentation</td>
<td>pptx</td>
</tr>
<tr class="even">
<td>HTML 슬라이드</td>
<td>xaringan<br>
ioslides<br>
revealjs</td>
<td><br>
<br>
revealjs</td>
</tr>
<tr class="odd">
<td>블로그 및 웹사이트</td>
<td>blogdown<br>
distill</td>
<td>Quarto Websites<br>
Quarto Blogs</td>
</tr>
<tr class="even">
<td>책</td>
<td>bookdown</td>
<td>Quarto Books</td>
</tr>
<tr class="odd">
<td>인터랙티브</td>
<td>Shiny Documents</td>
<td>Quarto Interactive Documents</td>
</tr>
<tr class="even">
<td>Paged HTML</td>
<td>pagedown</td>
<td>2022 여름 공개 예정</td>
</tr>
<tr class="odd">
<td>Journal Articles</td>
<td>rticles</td>
<td>2022 여름 공개 예정</td>
</tr>
<tr class="even">
<td>대시보드</td>
<td>flexdashboard</td>
<td>2022 가을 공개 예정</td>
</tr>
</tbody>
</table>
<p>다양한 포맷을 만들기 위해 여러 패키지를 사용했던 R Markdown과 달리, Quarto에서는 Quarto 시스템으로 다 들어왔습니다. 예전 R을 활용해 기술 블로그를 만들기 위해 distll package를 사용했지만, 이젠 Quarto의 Quarto Websites, Blogs를 활용하면 됩니다. 이 블로그도 Quarto Blogs를 이용해 만들었습니다. 아직 공개되지 않은 대시보드와 Journal Articles, Paged HTML도 곧 공개될 예정입니다.</p>
<p><br></p>
</section>
</section>
<section id="quarto의-미래" class="level2">
<h2 class="anchored" data-anchor-id="quarto의-미래">Quarto의 미래</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://orange-mansion.com/image/qaurto2.png" class="img-fluid figure-img"></p>
<figcaption>R &amp; stats illustrations by <a href="https://github.com/allisonhorst/stats-illustrations">@allison_horst</a></figcaption>
</figure>
</div>
<p>RStudio의 이번 Qaurto 발표는 결국 Posit과 비슷합니다. Python과 Julia 등 다른 언어들까지 포함하는 IDE인 Posit을 발표하고, 새롭게 출시한 Quarto에는 jupyter를 지원하면서 다른 언어 이용자들을 R 커뮤니티에 끌어들이겠다는 겁니다. Python 이용자들도 충분히 웹사이트와 블로그, 책을 만들 수 있다고 유혹하는 것이죠. RStudio의 CEO가 발표한 내용을 살펴보면 미래에는 마치 Google Docs에서 사람들이 자유롭게 문서를 편집하듯이 여러 언어를 사용하는 이용자들이 Quarto 문서를 통해 협업을 하길 구상하고 있더라고요. 물론 아직까지 그런 환경이 갖춰져 있는 건 아니지만, 꽤나 매력적인 미래의 모습입니다. 하루빨리 그런 환경이 오길 바라면서 이번 포스트를 마무리하겠습니다.</p>


</section>

 ]]></description>
  <category>R Markdown</category>
  <category>Quarto</category>
  <guid>https://orange-mansion.com/news/220827_quarto/</guid>
  <pubDate>Fri, 26 Aug 2022 15:00:00 GMT</pubDate>
</item>
<item>
  <title>RStudio가 Posit으로 이름을 바꾼다</title>
  <dc:creator>chichead </dc:creator>
  <link>https://orange-mansion.com/news/220821_Rstudio-is-becoming-Posit/</link>
  <description><![CDATA[ 





<section id="rstudio-is-becoming-posit" class="level2">
<h2 class="anchored" data-anchor-id="rstudio-is-becoming-posit">RStudio is becoming Posit</h2>
<p><img src="https://orange-mansion.com/image/posit.jpeg" class="img-fluid" style="width:100.0%" alt="posit logo"></p>
<p>프로그래밍 언어 그 자체를 가지고 명령어를 통해 작업을 하는 건 많이 어렵습니다. 불편하기도 하고요. 그럴 때 사용하는 게 바로 IDE(통합계발환경, Intergrated Development Environment)입니다. Python을 이용할 때 사용하는 PyCharm이나 Jupyter Notebook, 혹은 MS의 텍스트 에디터 VS Code가 대표적인 IDE라고 할 수 있을겁니다.</p>
<p>RStudio는 R의 가장 대표 IDE입니다. 그런데 이 RStudio가 지난 7월 말, 본인들의 이름을 바꾼다고 선언했습니다. 아마 8월 중으로 이름표를 새로 바꿀 것 같은데요, 그들이 공개한 RStudio의 새로운 이름은 Posit입니다. RStudio는 왜 갑자기 이름을 Posit으로 바꾸려는걸까요?</p>
<p><br></p>
</section>
<section id="rstudio가-이름을-바꾸는-이유는" class="level2">
<h2 class="anchored" data-anchor-id="rstudio가-이름을-바꾸는-이유는">RStudio가 이름을 바꾸는 이유는</h2>
<section id="a-broader-focus" class="level4">
<h4 class="anchored" data-anchor-id="a-broader-focus">1. A Broader Focus</h4>
<blockquote class="blockquote">
<p>“That name has started to feel increasing constraining.”</p>
</blockquote>
<p>데이터 관련 분석 프로그래밍, 혹은 데이터 사이언스에서 R은 항상 Python과 비교됩니다. 데이터 관련 공부를 시작하면서 R과 Python 사이의 양자택일은 쉽지 않은 고민이죠. 전반적인 흐름은 Python에게 웃어주고 있는 모양세입니다. 여기에 Julia까지 참전하면서 R의 입지는 점점 줄어들고 있습니다. R 이름을 딱 박고 있는 RStudio 입장에서 반길일이 아니죠.</p>
<p>RStudio가 여지껏 가만히 있었던 건 아닙니다. RStudio는 이미 Python을 지원하고 있습니다. R 인터페이스로 Python을 할 수 있는 reticulate 패키지도 있고요. 하지만 Python 이용자가 RStudio를 이용하는 건 쉽지 않은 선택입니다. 이미 잘 갖춰진 Python 전용 IDE를 쓰지 뭣하러 RStudio를 씁니까. 아니면 호환성 좋은 VS code를 쓰면 되죠.</p>
<p>RStudio의 수석과학자 해들리 위컴은 RStudio라는 이름이 가지는 한계를 인정했습니다. 누가봐도 RStudio는 R만 개발할 수 있는 IDE로 느껴집니다. 그래서 그들은 선택을 한 겁니다. 우리 프로그램에 R 이름 뗄 테니까, Python, Julia 등 다른 언어 쓰는 사람들도 우리 개발환경으로 들어오라고요.</p>
<p><br></p>
</section>
<section id="a-large-community" class="level4">
<h4 class="anchored" data-anchor-id="a-large-community">2. A Large Community</h4>
<p>R community는 RStudio를 중심으로 비교적 잘 운영되고 있습니다. 하지만 위에서 언급한것처럼 규모 측면이나 확장성 측면에서 한계도 명확하죠. RStudio는 이번 Posit으로의 개편을 통해 다른 커뮤니티와의 융합을 목적으로 두고 있습니다. 그렇다고 R에서 Python으로의 전환이 이뤄지진 않을 겁니다.</p>
<blockquote class="blockquote">
<p>“I’m not going to stop writing R code. I’m not going to learn Python.”</p>
</blockquote>
<p>해들리 위컴이 이렇게 밝힌 이상 Python으로의 거대한 전환은 없을 것 같네요. Posit으로의 변화에 발맞춰 또 다른 변화가 있으니 바로 Quarto입니다. 차세대 Rmarkdown인 Quarto에서는 Jupyter, VS code, Observable Javascript를 기본적으로 실행할 수 있다고 합니다. Quarto에 대해서는 다음 포스트를 통해 더 깊이 이야기를 해보도록 하겠습니다. 여튼 개편될 Posit은 아마 10월 이후에나 만나볼 수 있을 것 같습니다. <a href="https://posit.co">홈페이지</a>는 10월 중으로 오픈 예정이라고 합니다.</p>
<p><br></p>
</section>
</section>
<section id="posit의-뜻은" class="level2">
<h2 class="anchored" data-anchor-id="posit의-뜻은">Posit의 뜻은</h2>
<p>Posit을 사전에서 찾아보면 설치하다, ~을 사실로 가정하다, 아이디어 및 이론을 제시하다로 나옵니다. 토론 과정에서 아이디어를 제시하는 경우 posit이라는 단어를 쓰는 셈인거죠. RStudio(IDE 이름이 회사 이름이기도 합니다)에서는 posit이라는 단어가 데이터 분석가, 데이터 과학자들의 업무와 잘 어울린다는 판단을 했고, RStudio의 새로운 이름으로 Posit을 결정했다고 발표했습니다. 회사명도 Posit으로 바뀔 예정입니다.</p>
<p>조금 더 지켜봐야겠지만 R을 공부하는 제 입장에서 이번 RStudio의 변화는 반길만한 일입니다. 여러 언어 환경에 있는 사람들을 한 IDE에 모아둘 수 있다면 협업도 더 원활하게 이뤄질테니까요. 앞으로 발표될 Posit에 대한 정보는 꾸준히 정리해보겠습니다.</p>


</section>

 ]]></description>
  <category>R</category>
  <category>IDE</category>
  <guid>https://orange-mansion.com/news/220821_Rstudio-is-becoming-Posit/</guid>
  <pubDate>Sat, 20 Aug 2022 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
