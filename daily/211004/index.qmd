---
title: 'jsonedit() : Provide a interactive view of lists'
date: '2022-10-04'
categories: ['listviewer']
description: 'json 파일의 구조를 한 눈에 보고 싶을 때'
execute: 
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---

## Today Function : jsonedit()

오늘의 함수는 listviewer 패키지의 `jsonedit()` 함수입니다. listviewer 패키지는 list 형태의 데이터를 인터랙티브 페이지에서 수정할 수 있는 함수들을 제공합니다. 그 중 하나인 `jsonedit()` 함수를 살펴보도록 하겠습니다.

<br/>

### Usage

```{r, eval=FALSE}
jsonedit(listdata = NULL, 
         mode = "tree", 
         modes = c("code", "form", "text", "tree", "view"),
         ..., 
         width = NULL, 
         height = NULL,
         elementId = NULL)
```

<br/>

### Argument

**listdata** : 확인할 list, string 데이터를 넣습니다. list를 위한 함수이지만 다른 형태의 데이터도 JSON으로 변환되기 때문에 데이터프레임을 넣어도 사실 상관없습니다 <br/> 
**mode** : 인터랙티브 페이지에 처음으로 뜨는 mode를 설정합니다. 기본값은 tree입니다.

<br/>

### Example

```{r}
library(tibble)
library(listviewer)

# tibble 함수를 통해 중첩된 tibble을 만들어보겠습니다.
df1 <- tibble(
  x = 1:3,
  y = list(
    NULL,
    tibble(a = 1, b = 2),
    tibble(a = 1:3, b = 3:1)
  )
)

# jsonedit 함수로 df1 살펴보기
jsonedit(df1)


# data.frame도 jsonedit 함수에 입력이 가능합니다
jsonedit(mtcars)
```
